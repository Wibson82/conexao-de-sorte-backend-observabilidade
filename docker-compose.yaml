version: '3.9'

services:
  # ========================================
  # ðŸ“Š OBSERVABILITY MICROSERVICE
  # ========================================
  observabilidade-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: observabilidade-microservice
    restart: unless-stopped
    ports:
      - "8089:8089"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      # Redis (local dev)
      - conexao-de-sorte-redis-host=observabilidade-redis
      - conexao-de-sorte-redis-port=6379
      # JWT (Resource Server)
      - conexao-de-sorte-jwt-issuer=https://auth.conexaodesorte.com
      - conexao-de-sorte-jwt-jwks-uri=http://auth-microservice:8081/.well-known/jwks.json
      # Azure Key Vault (habilitar quando disponÃ­vel)
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID:-}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID:-}
      - AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID:-}
      - AZURE_KEYVAULT_ENDPOINT=${AZURE_KEYVAULT_ENDPOINT:-}
    depends_on:
      - observabilidade-redis
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8089/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - observabilidade-network
    volumes:
      - ./logs:/app/logs

  # ========================================
  # ðŸš€ REDIS PARA OBSERVABILIDADE
  # ========================================
  observabilidade-redis:
    image: redis:7-alpine
    container_name: observabilidade-redis
    restart: unless-stopped
    ports:
      - "6383:6379"
    command: >
      redis-server --appendonly yes --appendfsync everysec
    networks:
      - observabilidade-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  observabilidade-network:
    driver: bridge
